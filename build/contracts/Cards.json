{
  "contractName": "Cards",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x715018a6"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cards",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "components": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "components": [
                {
                  "name": "health",
                  "type": "uint16"
                },
                {
                  "name": "defence",
                  "type": "uint16"
                },
                {
                  "name": "mana",
                  "type": "uint16"
                },
                {
                  "name": "attack",
                  "type": "uint16"
                },
                {
                  "name": "specialAttack",
                  "type": "uint16"
                }
              ],
              "name": "opponent",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "health",
                  "type": "uint16"
                },
                {
                  "name": "defence",
                  "type": "uint16"
                },
                {
                  "name": "mana",
                  "type": "uint16"
                },
                {
                  "name": "attack",
                  "type": "uint16"
                },
                {
                  "name": "specialAttack",
                  "type": "uint16"
                }
              ],
              "name": "player",
              "type": "tuple"
            },
            {
              "name": "manaCost",
              "type": "uint16"
            }
          ],
          "name": "ability",
          "type": "tuple"
        },
        {
          "name": "initHealth",
          "type": "uint16"
        },
        {
          "name": "initDefence",
          "type": "uint16"
        },
        {
          "name": "initMana",
          "type": "uint16"
        },
        {
          "name": "speed",
          "type": "uint16"
        },
        {
          "name": "attack",
          "type": "uint16"
        },
        {
          "name": "specialAttack",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8dc10768"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "cardId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "components": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "name": "health",
                      "type": "uint16"
                    },
                    {
                      "name": "defence",
                      "type": "uint16"
                    },
                    {
                      "name": "mana",
                      "type": "uint16"
                    },
                    {
                      "name": "attack",
                      "type": "uint16"
                    },
                    {
                      "name": "specialAttack",
                      "type": "uint16"
                    }
                  ],
                  "name": "opponent",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "health",
                      "type": "uint16"
                    },
                    {
                      "name": "defence",
                      "type": "uint16"
                    },
                    {
                      "name": "mana",
                      "type": "uint16"
                    },
                    {
                      "name": "attack",
                      "type": "uint16"
                    },
                    {
                      "name": "specialAttack",
                      "type": "uint16"
                    }
                  ],
                  "name": "player",
                  "type": "tuple"
                },
                {
                  "name": "manaCost",
                  "type": "uint16"
                }
              ],
              "name": "ability",
              "type": "tuple"
            },
            {
              "name": "initHealth",
              "type": "uint16"
            },
            {
              "name": "initDefence",
              "type": "uint16"
            },
            {
              "name": "initMana",
              "type": "uint16"
            },
            {
              "name": "speed",
              "type": "uint16"
            },
            {
              "name": "attack",
              "type": "uint16"
            },
            {
              "name": "specialAttack",
              "type": "uint16"
            }
          ],
          "indexed": false,
          "name": "card",
          "type": "tuple"
        }
      ],
      "name": "NewCard",
      "type": "event",
      "signature": "0xb1b17b23cffcf729d34b26aac4faa18940cec6ac11f34c678d0bfe232b00dc81"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event",
      "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "components": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "name": "health",
                      "type": "uint16"
                    },
                    {
                      "name": "defence",
                      "type": "uint16"
                    },
                    {
                      "name": "mana",
                      "type": "uint16"
                    },
                    {
                      "name": "attack",
                      "type": "uint16"
                    },
                    {
                      "name": "specialAttack",
                      "type": "uint16"
                    }
                  ],
                  "name": "opponent",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "health",
                      "type": "uint16"
                    },
                    {
                      "name": "defence",
                      "type": "uint16"
                    },
                    {
                      "name": "mana",
                      "type": "uint16"
                    },
                    {
                      "name": "attack",
                      "type": "uint16"
                    },
                    {
                      "name": "specialAttack",
                      "type": "uint16"
                    }
                  ],
                  "name": "player",
                  "type": "tuple"
                },
                {
                  "name": "manaCost",
                  "type": "uint16"
                }
              ],
              "name": "ability",
              "type": "tuple"
            },
            {
              "name": "initHealth",
              "type": "uint16"
            },
            {
              "name": "initDefence",
              "type": "uint16"
            },
            {
              "name": "initMana",
              "type": "uint16"
            },
            {
              "name": "speed",
              "type": "uint16"
            },
            {
              "name": "attack",
              "type": "uint16"
            },
            {
              "name": "specialAttack",
              "type": "uint16"
            }
          ],
          "name": "card",
          "type": "tuple"
        }
      ],
      "name": "createCard",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x377b723a"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "cardCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x1b6cde10"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getCard",
      "outputs": [
        {
          "components": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "components": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "name": "health",
                      "type": "uint16"
                    },
                    {
                      "name": "defence",
                      "type": "uint16"
                    },
                    {
                      "name": "mana",
                      "type": "uint16"
                    },
                    {
                      "name": "attack",
                      "type": "uint16"
                    },
                    {
                      "name": "specialAttack",
                      "type": "uint16"
                    }
                  ],
                  "name": "opponent",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "name": "health",
                      "type": "uint16"
                    },
                    {
                      "name": "defence",
                      "type": "uint16"
                    },
                    {
                      "name": "mana",
                      "type": "uint16"
                    },
                    {
                      "name": "attack",
                      "type": "uint16"
                    },
                    {
                      "name": "specialAttack",
                      "type": "uint16"
                    }
                  ],
                  "name": "player",
                  "type": "tuple"
                },
                {
                  "name": "manaCost",
                  "type": "uint16"
                }
              ],
              "name": "ability",
              "type": "tuple"
            },
            {
              "name": "initHealth",
              "type": "uint16"
            },
            {
              "name": "initDefence",
              "type": "uint16"
            },
            {
              "name": "initMana",
              "type": "uint16"
            },
            {
              "name": "speed",
              "type": "uint16"
            },
            {
              "name": "attack",
              "type": "uint16"
            },
            {
              "name": "specialAttack",
              "type": "uint16"
            }
          ],
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x9188d312"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.2+commit.1df8f40c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"cardCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"opponent\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"player\",\"type\":\"tuple\"},{\"name\":\"manaCost\",\"type\":\"uint16\"}],\"name\":\"ability\",\"type\":\"tuple\"},{\"name\":\"initHealth\",\"type\":\"uint16\"},{\"name\":\"initDefence\",\"type\":\"uint16\"},{\"name\":\"initMana\",\"type\":\"uint16\"},{\"name\":\"speed\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"card\",\"type\":\"tuple\"}],\"name\":\"createCard\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cards\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"opponent\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"player\",\"type\":\"tuple\"},{\"name\":\"manaCost\",\"type\":\"uint16\"}],\"name\":\"ability\",\"type\":\"tuple\"},{\"name\":\"initHealth\",\"type\":\"uint16\"},{\"name\":\"initDefence\",\"type\":\"uint16\"},{\"name\":\"initMana\",\"type\":\"uint16\"},{\"name\":\"speed\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getCard\",\"outputs\":[{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"opponent\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"player\",\"type\":\"tuple\"},{\"name\":\"manaCost\",\"type\":\"uint16\"}],\"name\":\"ability\",\"type\":\"tuple\"},{\"name\":\"initHealth\",\"type\":\"uint16\"},{\"name\":\"initDefence\",\"type\":\"uint16\"},{\"name\":\"initMana\",\"type\":\"uint16\"},{\"name\":\"speed\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"cardId\",\"type\":\"uint256\"},{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"opponent\",\"type\":\"tuple\"},{\"components\":[{\"name\":\"health\",\"type\":\"uint16\"},{\"name\":\"defence\",\"type\":\"uint16\"},{\"name\":\"mana\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"name\":\"player\",\"type\":\"tuple\"},{\"name\":\"manaCost\",\"type\":\"uint16\"}],\"name\":\"ability\",\"type\":\"tuple\"},{\"name\":\"initHealth\",\"type\":\"uint16\"},{\"name\":\"initDefence\",\"type\":\"uint16\"},{\"name\":\"initMana\",\"type\":\"uint16\"},{\"name\":\"speed\",\"type\":\"uint16\"},{\"name\":\"attack\",\"type\":\"uint16\"},{\"name\":\"specialAttack\",\"type\":\"uint16\"}],\"indexed\":false,\"name\":\"card\",\"type\":\"tuple\"}],\"name\":\"NewCard\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/Cards.sol\":\"Cards\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/Cards.sol\":{\"keccak256\":\"0xf86e1266da16f87c4db9be6145da48ada2efb1f97d147757602e89b01db96d7c\",\"urls\":[\"bzzr://3e3d69041bf4b2923148083140804db1169f46a3dd4fba6f382c47e806eb8c79\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/CryptoBeastsTypes.sol\":{\"keccak256\":\"0x48f1a221455ed200b21b9313ef19c8f5b705a2bd3e370bb3f649af6c3e0c0c4b\",\"urls\":[\"bzzr://66a39f885bfd0b4b04c5bb74c3e35426c2dcaeb194524b7d65563bce3b920d1b\"]},\"/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]}},\"version\":1}",
  "bytecode": "0x6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36117fd806100cf6000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c0100000000000000000000000000000000000000000000000000000000900480638dc10768116100785780638dc107681461010c5780638f32d59b146101435780639188d31214610161578063f2fde38b14610191576100a5565b80631b6cde10146100aa578063377b723a146100c8578063715018a6146100e45780638da5cb5b146100ee575b600080fd5b6100b26101ad565b6040516100bf9190611641565b60405180910390f35b6100e260048036036100dd91908101906112fd565b6101ba565b005b6100ec6104ee565b005b6100f66105c0565b604051610103919061155d565b60405180910390f35b6101266004803603610121919081019061133e565b6105e9565b60405161013a989796959493929190611593565b60405180910390f35b61014b610963565b6040516101589190611578565b60405180910390f35b61017b6004803603610176919081019061133e565b6109ba565b604051610188919061161f565b60405180910390f35b6101ab60048036036101a691908101906112d4565b610d96565b005b6000600180549050905090565b6101c2610963565b15156101cd57600080fd5b60006001808390806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001908051906020019061021a929190610eaf565b506020820151816001016000820151816000019080519060200190610240929190610eaf565b5060208201518160010160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff16021790555060408201518160000160046101000a81548161ffff021916908361ffff16021790555060608201518160000160066101000a81548161ffff021916908361ffff16021790555060808201518160000160086101000a81548161ffff021916908361ffff160217905550505060408201518160020160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff16021790555060408201518160000160046101000a81548161ffff021916908361ffff16021790555060608201518160000160066101000a81548161ffff021916908361ffff16021790555060808201518160000160086101000a81548161ffff021916908361ffff160217905550505060608201518160030160006101000a81548161ffff021916908361ffff160217905550505060408201518160050160006101000a81548161ffff021916908361ffff16021790555060608201518160050160026101000a81548161ffff021916908361ffff16021790555060808201518160050160046101000a81548161ffff021916908361ffff16021790555060a08201518160050160066101000a81548161ffff021916908361ffff16021790555060c08201518160050160086101000a81548161ffff021916908361ffff16021790555060e082015181600501600a6101000a81548161ffff021916908361ffff16021790555050500390507fb1b17b23cffcf729d34b26aac4faa18940cec6ac11f34c678d0bfe232b00dc8181836040516104e292919061165c565b60405180910390a15050565b6104f6610963565b151561050157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811015156105f857fe5b9060005260206000209060060201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106a45780601f10610679576101008083540402835291602001916106a4565b820191906000526020600020905b81548152906001019060200180831161068757829003601f168201915b5050505050908060010160806040519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b505050505081526020016001820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016002820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016003820160009054906101000a900461ffff1661ffff1661ffff1681525050908060050160009054906101000a900461ffff16908060050160029054906101000a900461ffff16908060050160049054906101000a900461ffff16908060050160069054906101000a900461ffff16908060050160089054906101000a900461ffff169080600501600a9054906101000a900461ffff16905088565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6109c2610f2f565b6001828154811015156109d157fe5b90600052602060002090600602016101006040519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b505050505081526020016001820160806040519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b385780601f10610b0d57610100808354040283529160200191610b38565b820191906000526020600020905b815481529060010190602001808311610b1b57829003601f168201915b505050505081526020016001820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016002820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016003820160009054906101000a900461ffff1661ffff1661ffff168152505081526020016005820160009054906101000a900461ffff1661ffff1661ffff1681526020016005820160029054906101000a900461ffff1661ffff1661ffff1681526020016005820160049054906101000a900461ffff1661ffff1661ffff1681526020016005820160069054906101000a900461ffff1661ffff1661ffff1681526020016005820160089054906101000a900461ffff1661ffff1661ffff16815260200160058201600a9054906101000a900461ffff1661ffff1661ffff16815250509050919050565b610d9e610963565b1515610da957600080fd5b610db281610db5565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610df157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ef057805160ff1916838001178555610f1e565b82800160010185558215610f1e579182015b82811115610f1d578251825591602001919060010190610f02565b5b509050610f2b9190610f93565b5090565b6102606040519081016040528060608152602001610f4b610fb8565b8152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff1681525090565b610fb591905b80821115610fb1576000816000905550600101610f99565b5090565b90565b6101806040519081016040528060608152602001610fd4610ff2565b8152602001610fe1610ff2565b8152602001600061ffff1681525090565b60a060405190810160405280600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff1681525090565b60006110428235611746565b905092915050565b600082601f830112151561105d57600080fd5b813561107061106b826116b9565b61168c565b9150808252602083016020830185838301111561108c57600080fd5b611097838284611770565b50505092915050565b600061018082840312156110b357600080fd5b6110bd608061168c565b9050600082013567ffffffffffffffff8111156110d957600080fd5b6110e58482850161104a565b60008301525060206110f98482850161112e565b60208301525060c061110d8482850161112e565b604083015250610160611122848285016112ac565b60608301525092915050565b600060a0828403121561114057600080fd5b61114a60a061168c565b9050600061115a848285016112ac565b600083015250602061116e848285016112ac565b6020830152506040611182848285016112ac565b6040830152506060611196848285016112ac565b60608301525060806111aa848285016112ac565b60808301525092915050565b600061010082840312156111c957600080fd5b6111d461010061168c565b9050600082013567ffffffffffffffff8111156111f057600080fd5b6111fc8482850161104a565b600083015250602082013567ffffffffffffffff81111561121c57600080fd5b611228848285016110a0565b602083015250604061123c848285016112ac565b6040830152506060611250848285016112ac565b6060830152506080611264848285016112ac565b60808301525060a0611278848285016112ac565b60a08301525060c061128c848285016112ac565b60c08301525060e06112a0848285016112ac565b60e08301525092915050565b60006112b88235611758565b905092915050565b60006112cc8235611766565b905092915050565b6000602082840312156112e657600080fd5b60006112f484828501611036565b91505092915050565b60006020828403121561130f57600080fd5b600082013567ffffffffffffffff81111561132957600080fd5b611335848285016111b6565b91505092915050565b60006020828403121561135057600080fd5b600061135e848285016112c0565b91505092915050565b611370816116f0565b82525050565b61137f81611702565b82525050565b6000611390826116e5565b8084526113a481602086016020860161177f565b6113ad816117b2565b602085010191505092915050565b60006101808301600083015184820360008601526113d98282611385565b91505060208301516113ee6020860182611420565b50604083015161140160c0860182611420565b50606083015161141561016086018261153f565b508091505092915050565b60a082016000820151611436600085018261153f565b506020820151611449602085018261153f565b50604082015161145c604085018261153f565b50606082015161146f606085018261153f565b506080820151611482608085018261153f565b50505050565b60006101008301600083015184820360008601526114a68282611385565b915050602083015184820360208601526114c082826113bb565b91505060408301516114d5604086018261153f565b5060608301516114e8606086018261153f565b5060808301516114fb608086018261153f565b5060a083015161150e60a086018261153f565b5060c083015161152160c086018261153f565b5060e083015161153460e086018261153f565b508091505092915050565b6115488161170e565b82525050565b6115578161173c565b82525050565b60006020820190506115726000830184611367565b92915050565b600060208201905061158d6000830184611376565b92915050565b60006101008201905081810360008301526115ae818b611385565b905081810360208301526115c2818a6113bb565b90506115d1604083018961153f565b6115de606083018861153f565b6115eb608083018761153f565b6115f860a083018661153f565b61160560c083018561153f565b61161260e083018461153f565b9998505050505050505050565b600060208201905081810360008301526116398184611488565b905092915050565b6000602082019050611656600083018461154e565b92915050565b6000604082019050611671600083018561154e565b81810360208301526116838184611488565b90509392505050565b6000604051905081810181811067ffffffffffffffff821117156116af57600080fd5b8060405250919050565b600067ffffffffffffffff8211156116d057600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b60006116fb8261171c565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117518261171c565b9050919050565b600061ffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561179d578082015181840152602081019050611782565b838111156117ac576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820ca43395b686831cc919b1b97ff83c7a27c144495ea68d990bfaa9b42341adfc26c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a5576000357c0100000000000000000000000000000000000000000000000000000000900480638dc10768116100785780638dc107681461010c5780638f32d59b146101435780639188d31214610161578063f2fde38b14610191576100a5565b80631b6cde10146100aa578063377b723a146100c8578063715018a6146100e45780638da5cb5b146100ee575b600080fd5b6100b26101ad565b6040516100bf9190611641565b60405180910390f35b6100e260048036036100dd91908101906112fd565b6101ba565b005b6100ec6104ee565b005b6100f66105c0565b604051610103919061155d565b60405180910390f35b6101266004803603610121919081019061133e565b6105e9565b60405161013a989796959493929190611593565b60405180910390f35b61014b610963565b6040516101589190611578565b60405180910390f35b61017b6004803603610176919081019061133e565b6109ba565b604051610188919061161f565b60405180910390f35b6101ab60048036036101a691908101906112d4565b610d96565b005b6000600180549050905090565b6101c2610963565b15156101cd57600080fd5b60006001808390806001815401808255809150509060018203906000526020600020906006020160009091929091909150600082015181600001908051906020019061021a929190610eaf565b506020820151816001016000820151816000019080519060200190610240929190610eaf565b5060208201518160010160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff16021790555060408201518160000160046101000a81548161ffff021916908361ffff16021790555060608201518160000160066101000a81548161ffff021916908361ffff16021790555060808201518160000160086101000a81548161ffff021916908361ffff160217905550505060408201518160020160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff16021790555060408201518160000160046101000a81548161ffff021916908361ffff16021790555060608201518160000160066101000a81548161ffff021916908361ffff16021790555060808201518160000160086101000a81548161ffff021916908361ffff160217905550505060608201518160030160006101000a81548161ffff021916908361ffff160217905550505060408201518160050160006101000a81548161ffff021916908361ffff16021790555060608201518160050160026101000a81548161ffff021916908361ffff16021790555060808201518160050160046101000a81548161ffff021916908361ffff16021790555060a08201518160050160066101000a81548161ffff021916908361ffff16021790555060c08201518160050160086101000a81548161ffff021916908361ffff16021790555060e082015181600501600a6101000a81548161ffff021916908361ffff16021790555050500390507fb1b17b23cffcf729d34b26aac4faa18940cec6ac11f34c678d0bfe232b00dc8181836040516104e292919061165c565b60405180910390a15050565b6104f6610963565b151561050157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6001818154811015156105f857fe5b9060005260206000209060060201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106a45780601f10610679576101008083540402835291602001916106a4565b820191906000526020600020905b81548152906001019060200180831161068757829003601f168201915b5050505050908060010160806040519081016040529081600082018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b505050505081526020016001820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016002820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016003820160009054906101000a900461ffff1661ffff1661ffff1681525050908060050160009054906101000a900461ffff16908060050160029054906101000a900461ffff16908060050160049054906101000a900461ffff16908060050160069054906101000a900461ffff16908060050160089054906101000a900461ffff169080600501600a9054906101000a900461ffff16905088565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6109c2610f2f565b6001828154811015156109d157fe5b90600052602060002090600602016101006040519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b505050505081526020016001820160806040519081016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b385780601f10610b0d57610100808354040283529160200191610b38565b820191906000526020600020905b815481529060010190602001808311610b1b57829003601f168201915b505050505081526020016001820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016002820160a060405190810160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff1681526020016000820160069054906101000a900461ffff1661ffff1661ffff1681526020016000820160089054906101000a900461ffff1661ffff1661ffff168152505081526020016003820160009054906101000a900461ffff1661ffff1661ffff168152505081526020016005820160009054906101000a900461ffff1661ffff1661ffff1681526020016005820160029054906101000a900461ffff1661ffff1661ffff1681526020016005820160049054906101000a900461ffff1661ffff1661ffff1681526020016005820160069054906101000a900461ffff1661ffff1661ffff1681526020016005820160089054906101000a900461ffff1661ffff1661ffff16815260200160058201600a9054906101000a900461ffff1661ffff1661ffff16815250509050919050565b610d9e610963565b1515610da957600080fd5b610db281610db5565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610df157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610ef057805160ff1916838001178555610f1e565b82800160010185558215610f1e579182015b82811115610f1d578251825591602001919060010190610f02565b5b509050610f2b9190610f93565b5090565b6102606040519081016040528060608152602001610f4b610fb8565b8152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff1681525090565b610fb591905b80821115610fb1576000816000905550600101610f99565b5090565b90565b6101806040519081016040528060608152602001610fd4610ff2565b8152602001610fe1610ff2565b8152602001600061ffff1681525090565b60a060405190810160405280600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff168152602001600061ffff1681525090565b60006110428235611746565b905092915050565b600082601f830112151561105d57600080fd5b813561107061106b826116b9565b61168c565b9150808252602083016020830185838301111561108c57600080fd5b611097838284611770565b50505092915050565b600061018082840312156110b357600080fd5b6110bd608061168c565b9050600082013567ffffffffffffffff8111156110d957600080fd5b6110e58482850161104a565b60008301525060206110f98482850161112e565b60208301525060c061110d8482850161112e565b604083015250610160611122848285016112ac565b60608301525092915050565b600060a0828403121561114057600080fd5b61114a60a061168c565b9050600061115a848285016112ac565b600083015250602061116e848285016112ac565b6020830152506040611182848285016112ac565b6040830152506060611196848285016112ac565b60608301525060806111aa848285016112ac565b60808301525092915050565b600061010082840312156111c957600080fd5b6111d461010061168c565b9050600082013567ffffffffffffffff8111156111f057600080fd5b6111fc8482850161104a565b600083015250602082013567ffffffffffffffff81111561121c57600080fd5b611228848285016110a0565b602083015250604061123c848285016112ac565b6040830152506060611250848285016112ac565b6060830152506080611264848285016112ac565b60808301525060a0611278848285016112ac565b60a08301525060c061128c848285016112ac565b60c08301525060e06112a0848285016112ac565b60e08301525092915050565b60006112b88235611758565b905092915050565b60006112cc8235611766565b905092915050565b6000602082840312156112e657600080fd5b60006112f484828501611036565b91505092915050565b60006020828403121561130f57600080fd5b600082013567ffffffffffffffff81111561132957600080fd5b611335848285016111b6565b91505092915050565b60006020828403121561135057600080fd5b600061135e848285016112c0565b91505092915050565b611370816116f0565b82525050565b61137f81611702565b82525050565b6000611390826116e5565b8084526113a481602086016020860161177f565b6113ad816117b2565b602085010191505092915050565b60006101808301600083015184820360008601526113d98282611385565b91505060208301516113ee6020860182611420565b50604083015161140160c0860182611420565b50606083015161141561016086018261153f565b508091505092915050565b60a082016000820151611436600085018261153f565b506020820151611449602085018261153f565b50604082015161145c604085018261153f565b50606082015161146f606085018261153f565b506080820151611482608085018261153f565b50505050565b60006101008301600083015184820360008601526114a68282611385565b915050602083015184820360208601526114c082826113bb565b91505060408301516114d5604086018261153f565b5060608301516114e8606086018261153f565b5060808301516114fb608086018261153f565b5060a083015161150e60a086018261153f565b5060c083015161152160c086018261153f565b5060e083015161153460e086018261153f565b508091505092915050565b6115488161170e565b82525050565b6115578161173c565b82525050565b60006020820190506115726000830184611367565b92915050565b600060208201905061158d6000830184611376565b92915050565b60006101008201905081810360008301526115ae818b611385565b905081810360208301526115c2818a6113bb565b90506115d1604083018961153f565b6115de606083018861153f565b6115eb608083018761153f565b6115f860a083018661153f565b61160560c083018561153f565b61161260e083018461153f565b9998505050505050505050565b600060208201905081810360008301526116398184611488565b905092915050565b6000602082019050611656600083018461154e565b92915050565b6000604082019050611671600083018561154e565b81810360208301526116838184611488565b90509392505050565b6000604051905081810181811067ffffffffffffffff821117156116af57600080fd5b8060405250919050565b600067ffffffffffffffff8211156116d057600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b60006116fb8261171c565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117518261171c565b9050919050565b600061ffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561179d578082015181840152602081019050611782565b838111156117ac576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820ca43395b686831cc919b1b97ff83c7a27c144495ea68d990bfaa9b42341adfc26c6578706572696d656e74616cf50037",
  "sourceMap": "199:465:1:-;;;524:10:6;515:6;;:19;;;;;;;;;;;;;;;;;;582:6;;;;;;;;;;;549:40;;578:1;549:40;;;;;;;;;;;;199:465:1;;;;;;",
  "deployedSourceMap": "199:465:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;199:465:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;483:79;;;:::i;:::-;;;;;;;;;;;;;;;;321:156;;;;;;;;;;;;;;;;:::i;:::-;;1423:137:6;;;:::i;:::-;;659:77;;;:::i;:::-;;;;;;;;;;;;;;;;295:19:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;979:90:6;;;:::i;:::-;;;;;;;;;;;;;;;;568:94:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1731:107:6;;;;;;;;;;;;;;;;:::i;:::-;;483:79:1;520:4;543:5;:12;;;;536:19;;483:79;:::o;321:156::-;863:9:6;:7;:9::i;:::-;855:18;;;;;;;;400:11:1;433:1;414:5;425:4;414:16;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;414:16:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::io;1423:137:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1484:40;;1505:6;;;;;;;;;;;1484:40;;;;;;;;;;;;1551:1;1534:6;;:19;;;;;;;;;;;;;;;;;;1423:137::o;659:77::-;697:7;723:6;;;;;;;;;;;716:13;;659:77;:::oo;979:90:6:-;1019:4;1056:6;;;;;;;;;;;1042:20;;:10;:20;;;1035:27;;979:90;:::o;568:94:1:-;613:11;;:::io;1731:107:6:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;1982:183::-;2075:1;2055:22;;:8;:22;;;;2047:31;;;;;;;;2122:8;2093:38;;2114:6;;;;;;;;;;;2093:38;;;;;;;;;;;;2150:8;2141:6;;:17;;;;;;;;;;;;;;;;;;1982:183;:::o;199:465:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;131:434;;229:3;222:4;214:6;210:17;206:27;199:35;196:2;;;247:1;244;237:12;196:2;284:6;271:20;306:61;321:45;359:6;321:45;;;306:61;;;297:70;;387:6;380:5;373:21;423:4;415:6;411:17;456:4;449:5;445:16;491:3;482:6;477:3;473:16;470:25;467:2;;;508:1;505;498:12;467:2;518:41;552:6;547:3;542;518:41;;;189:376;;;;;;;;612:907;;721:5;709:9;704:3;700:19;696:31;693:2;;;740:1;737;730:12;693:2;758:20;773:4;758:20;;;749:29;;856:1;845:9;841:17;828:31;879:18;871:6;868:30;865:2;;;911:1;908;901:12;865:2;945:55;996:3;987:6;976:9;972:22;945:55;;;939:3;932:5;928:15;921:80;788:224;1066:2;1099:76;1171:3;1162:6;1151:9;1147:22;1099:76;;;1092:4;1085:5;1081:16;1074:102;1022:165;1239:3;1273:76;1345:3;1336:6;1325:9;1321:22;1273:76;;;1266:4;1259:5;1255:16;1248:102;1197:164;1415:3;1449:48;1493:3;1484:6;1473:9;1469:22;1449:48;;;1442:4;1435:5;1431:16;1424:74;1371:138;687:832;;;;;1572:912;;1688:4;1676:9;1671:3;1667:19;1663:30;1660:2;;;1706:1;1703;1696:12;1660:2;1724:20;1739:4;1724:20;;;1715:29;;1796:1;1827:48;1871:3;1862:6;1851:9;1847:22;1827:48;;;1821:3;1814:5;1810:15;1803:73;1754:133;1940:2;1973:48;2017:3;2008:6;1997:9;1993:22;1973:48;;;1966:4;1959:5;1955:16;1948:74;1897:136;2083:2;2116:48;2160:3;2151:6;2140:9;2136:22;2116:48;;;2109:4;2102:5;2098:16;2091:74;2043:133;2228:2;2261:48;2305:3;2296:6;2285:9;2281:22;2261:48;;;2254:4;2247:5;2243:16;2236:74;2186:135;2380:3;2414:48;2458:3;2449:6;2438:9;2434:22;2414:48;;;2407:4;2400:5;2396:16;2389:74;2331:143;1654:830;;;;;2527:1556;;2637:5;2625:9;2620:3;2616:19;2612:31;2609:2;;;2656:1;2653;2646:12;2609:2;2674:21;2689:5;2674:21;;;2665:30;;2773:1;2762:9;2758:17;2745:31;2796:18;2788:6;2785:30;2782:2;;;2828:1;2825;2818:12;2782:2;2862:55;2913:3;2904:6;2893:9;2889:22;2862:55;;;2856:3;2849:5;2845:15;2838:80;2705:224;3010:2;2999:9;2995:18;2982:32;3034:18;3026:6;3023:30;3020:2;;;3066:1;3063;3056:12;3020:2;3101:69;3166:3;3157:6;3146:9;3142:22;3101:69;;;3094:4;3087:5;3083:16;3076:95;2939:243;3238:2;3271:48;3315:3;3306:6;3295:9;3291:22;3271:48;;;3264:4;3257:5;3253:16;3246:74;3192:139;3388:2;3421:48;3465:3;3456:6;3445:9;3441:22;3421:48;;;3414:4;3407:5;3403:16;3396:74;3341:140;3535:3;3569:48;3613:3;3604:6;3593:9;3589:22;3569:48;;;3562:4;3555:5;3551:16;3544:74;3491:138;3680:3;3714:48;3758:3;3749:6;3738:9;3734:22;3714:48;;;3707:4;3700:5;3696:16;3689:74;3639:135;3826:3;3860:48;3904:3;3895:6;3884:9;3880:22;3860:48;;;3853:4;3846:5;3842:16;3835:74;3784:136;3979:3;4013:48;4057:3;4048:6;4037:9;4033:22;4013:48;;;4006:4;3999:5;3995:16;3988:74;3930:143;2603:1480;;;;;4090:116;;4156:45;4193:6;4180:20;4156:45;;;4147:54;;4141:65;;;;;4213:118;;4280:46;4318:6;4305:20;4280:46;;;4271:55;;4265:66;;;;;4338:241;;4442:2;4430:9;4421:7;4417:23;4413:32;4410:2;;;4458:1;4455;4448:12;4410:2;4493:1;4510:53;4555:7;4546:6;4535:9;4531:22;4510:53;;;4500:63;;4472:97;4404:175;;;;;4586:369;;4711:2;4699:9;4690:7;4686:23;4682:32;4679:2;;;4727:1;4724;4717:12;4679:2;4790:1;4779:9;4775:17;4762:31;4813:18;4805:6;4802:30;4799:2;;;4845:1;4842;4835:12;4799:2;4865:74;4931:7;4922:6;4911:9;4907:22;4865:74;;;4855:84;;4741:204;4673:282;;;;;4962:241;;5066:2;5054:9;5045:7;5041:23;5037:32;5034:2;;;5082:1;5079;5072:12;5034:2;5117:1;5134:53;5179:7;5170:6;5159:9;5155:22;5134:53;;;5124:63;;5096:97;5028:175;;;;;5210:110;5283:31;5308:5;5283:31;;;5278:3;5271:44;5265:55;;;5327:101;5394:28;5416:5;5394:28;;;5389:3;5382:41;5376:52;;;5435:292;;5533:35;5562:5;5533:35;;;5585:6;5580:3;5573:19;5597:63;5653:6;5646:4;5641:3;5637:14;5630:4;5623:5;5619:16;5597:63;;;5692:29;5714:6;5692:29;;;5685:4;5680:3;5676:14;5672:50;5665:57;;5513:214;;;;;;5809:1026;;5944:5;5939:3;5935:15;6031:3;6024:5;6020:15;6014:22;6080:3;6074:4;6070:14;6064:3;6059;6055:13;6048:37;6100:68;6163:4;6150:11;6100:68;;;6092:76;;5965:215;6260:4;6253:5;6249:16;6243:23;6278:120;6392:4;6387:3;6383:14;6370:11;6278:120;;;6190:220;6488:4;6481:5;6477:16;6471:23;6506:120;6620:4;6615:3;6611:14;6598:11;6506:120;;;6420:218;6718:4;6711:5;6707:16;6701:23;6736:61;6790:5;6785:3;6781:15;6768:11;6736:61;;;6648:161;6826:4;6819:11;;5917:918;;;;;;6931:1010;7072:4;7067:3;7063:14;7160:3;7153:5;7149:15;7143:22;7177:59;7231:3;7226;7222:13;7209:11;7177:59;;;7092:156;7327:4;7320:5;7316:16;7310:23;7345:60;7399:4;7394:3;7390:14;7377:11;7345:60;;;7258:159;7493:4;7486:5;7482:16;7476:23;7511:60;7565:4;7560:3;7556:14;7543:11;7511:60;;;7427:156;7661:4;7654:5;7650:16;7644:23;7679:60;7733:4;7728:3;7724:14;7711:11;7679:60;;;7593:158;7836:4;7829:5;7825:16;7819:23;7854:60;7908:4;7903:3;7899:14;7886:11;7854:60;;;7761:165;7045:896;;;;8017:1678;;8150:5;8145:3;8141:15;8237:3;8230:5;8226:15;8220:22;8286:3;8280:4;8276:14;8270:3;8265;8261:13;8254:37;8306:68;8369:4;8356:11;8306:68;;;8298:76;;8171:215;8465:4;8458:5;8454:16;8448:23;8516:3;8510:4;8506:14;8499:4;8494:3;8490:14;8483:38;8536:96;8627:4;8614:11;8536:96;;;8528:104;;8396:248;8726:4;8719:5;8715:16;8709:23;8744:60;8798:4;8793:3;8789:14;8776:11;8744:60;;;8654:162;8899:4;8892:5;8888:16;8882:23;8917:60;8971:4;8966:3;8962:14;8949:11;8917:60;;;8826:163;9069:4;9062:5;9058:16;9052:23;9087:60;9141:4;9136:3;9132:14;9119:11;9087:60;;;8999:160;9236:4;9229:5;9225:16;9219:23;9254:60;9308:4;9303:3;9299:14;9286:11;9254:60;;;9169:157;9404:4;9397:5;9393:16;9387:23;9422:60;9476:4;9471:3;9467:14;9454:11;9422:60;;;9336:158;9579:4;9572:5;9568:16;9562:23;9597:60;9651:4;9646:3;9642:14;9629:11;9597:60;;;9504:165;9686:4;9679:11;;8123:1572;;;;;;9702:107;9773:30;9797:5;9773:30;;;9768:3;9761:43;9755:54;;;9816:110;9889:31;9914:5;9889:31;;;9884:3;9877:44;9871:55;;;9933:193;;10041:2;10030:9;10026:18;10018:26;;10055:61;10113:1;10102:9;10098:17;10089:6;10055:61;;;10012:114;;;;;10133:181;;10235:2;10224:9;10220:18;10212:26;;10249:55;10301:1;10290:9;10286:17;10277:6;10249:55;;;10206:108;;;;;10321:1097;;10673:3;10662:9;10658:19;10650:27;;10724:9;10718:4;10714:20;10710:1;10699:9;10695:17;10688:47;10749:64;10808:4;10799:6;10749:64;;;10741:72;;10861:9;10855:4;10851:20;10846:2;10835:9;10831:18;10824:48;10886:92;10973:4;10964:6;10886:92;;;10878:100;;10989:60;11045:2;11034:9;11030:18;11021:6;10989:60;;;11060;11116:2;11105:9;11101:18;11092:6;11060:60;;;11131:61;11187:3;11176:9;11172:19;11163:6;11131:61;;;11203;11259:3;11248:9;11244:19;11235:6;11203:61;;;11275;11331:3;11320:9;11316:19;11307:6;11275:61;;;11347;11403:3;11392:9;11388:19;11379:6;11347:61;;;10644:774;;;;;;;;;;;;11425:325;;11575:2;11564:9;11560:18;11552:26;;11625:9;11619:4;11615:20;11611:1;11600:9;11596:17;11589:47;11650:90;11735:4;11726:6;11650:90;;;11642:98;;11546:204;;;;;11757:193;;11865:2;11854:9;11850:18;11842:26;;11879:61;11937:1;11926:9;11922:17;11913:6;11879:61;;;11836:114;;;;;11957:426;;12135:2;12124:9;12120:18;12112:26;;12149:61;12207:1;12196:9;12192:17;12183:6;12149:61;;;12258:9;12252:4;12248:20;12243:2;12232:9;12228:18;12221:48;12283:90;12368:4;12359:6;12283:90;;;12275:98;;12106:277;;;;;;12390:256;;12452:2;12446:9;12436:19;;12490:4;12482:6;12478:17;12589:6;12577:10;12574:22;12553:18;12541:10;12538:34;12535:62;12532:2;;;12610:1;12607;12600:12;12532:2;12630:10;12626:2;12619:22;12430:216;;;;;12653:255;;12793:18;12785:6;12782:30;12779:2;;;12825:1;12822;12815:12;12779:2;12869:4;12865:9;12858:4;12850:6;12846:17;12842:33;12834:41;;12898:4;12892;12888:15;12880:23;;12716:192;;;;12915:88;;12992:5;12986:12;12976:22;;12970:33;;;;13010:105;;13079:31;13104:5;13079:31;;;13068:42;;13062:53;;;;13122:92;;13202:5;13195:13;13188:21;13177:32;;13171:43;;;;13221:91;;13300:6;13293:5;13289:18;13278:29;;13272:40;;;;13319:128;;13399:42;13392:5;13388:54;13377:65;;13371:76;;;;13454:79;;13523:5;13512:16;;13506:27;;;;13540:105;;13609:31;13634:5;13609:31;;;13598:42;;13592:53;;;;13652:91;;13731:6;13724:5;13720:18;13709:29;;13703:40;;;;13750:79;;13819:5;13808:16;;13802:27;;;;13837:145;13918:6;13913:3;13908;13895:30;13974:1;13965:6;13960:3;13956:16;13949:27;13888:94;;;;13991:268;14056:1;14063:101;14077:6;14074:1;14071:13;14063:101;;;14153:1;14148:3;14144:11;14138:18;14134:1;14129:3;14125:11;14118:39;14099:2;14096:1;14092:10;14087:15;;14063:101;;;14179:6;14176:1;14173:13;14170:2;;;14244:1;14235:6;14230:3;14226:16;14219:27;14170:2;14040:219;;;;;14267:97;;14355:2;14351:7;14346:2;14339:5;14335:14;14331:28;14321:38;;14315:49;;;",
  "source": "pragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\nimport \"../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport {CryptoBeastsTypes} from \"./CryptoBeastsTypes.sol\";\n\ncontract Cards is Ownable, CryptoBeastsTypes {\n\n    event NewCard(uint cardId, Card card);\n\n    Card[] public cards;\n\n    function createCard(Card memory card) public\n        onlyOwner()\n    {\n        uint cardId = cards.push(card) - 1;\n        emit NewCard(cardId, card);\n    }\n\n    function cardCount() public returns (uint) {\n        return cards.length;\n    }\n\n    function getCard(uint index) public returns (Card memory) {\n        return cards[index];\n    }\n}\n",
  "sourcePath": "/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/Cards.sol",
  "ast": {
    "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/Cards.sol",
    "exportedSymbols": {
      "Cards": [
        618
      ]
    },
    "id": 619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 557,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 558,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 559,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1313,
        "src": "59:79:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/CryptoBeastsTypes.sol",
        "file": "./CryptoBeastsTypes.sol",
        "id": 561,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 658,
        "src": "139:58:1",
        "symbolAliases": [
          {
            "foreign": 560,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 562,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1312,
              "src": "217:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1312",
                "typeString": "contract Ownable"
              }
            },
            "id": 563,
            "nodeType": "InheritanceSpecifier",
            "src": "217:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 564,
              "name": "CryptoBeastsTypes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 657,
              "src": "226:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CryptoBeastsTypes_$657",
                "typeString": "contract CryptoBeastsTypes"
              }
            },
            "id": 565,
            "nodeType": "InheritanceSpecifier",
            "src": "226:17:1"
          }
        ],
        "contractDependencies": [
          657,
          1312
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 618,
        "linearizedBaseContracts": [
          618,
          657,
          1312
        ],
        "name": "Cards",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 571,
            "name": "NewCard",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "265:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "indexed": false,
                  "name": "card",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "278:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                    "typeString": "struct CryptoBeastsTypes.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 568,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 656,
                    "src": "278:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                      "typeString": "struct CryptoBeastsTypes.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:24:1"
            },
            "src": "251:38:1"
          },
          {
            "constant": false,
            "id": 574,
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "295:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
              "typeString": "struct CryptoBeastsTypes.Card[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 572,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 656,
                "src": "295:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                  "typeString": "struct CryptoBeastsTypes.Card"
                }
              },
              "id": 573,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "295:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage_ptr",
                "typeString": "struct CryptoBeastsTypes.Card[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "390:87:1",
              "statements": [
                {
                  "assignments": [
                    582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 582,
                      "name": "cardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "400:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 581,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "400:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 589,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "card",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "425:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                            "typeString": "struct CryptoBeastsTypes.Card memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                            "typeString": "struct CryptoBeastsTypes.Card memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 583,
                          "name": "cards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "414:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
                            "typeString": "struct CryptoBeastsTypes.Card storage ref[] storage ref"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "414:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$656_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct CryptoBeastsTypes.Card storage ref) returns (uint256)"
                        }
                      },
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "414:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "433:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "414:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "400:34:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "457:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 592,
                        "name": "card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "465:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                          "typeString": "struct CryptoBeastsTypes.Card memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                          "typeString": "struct CryptoBeastsTypes.Card memory"
                        }
                      ],
                      "id": 590,
                      "name": "NewCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "449:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Card_$656_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct CryptoBeastsTypes.Card memory)"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "449:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "EmitStatement",
                  "src": "444:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 579,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 578,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1246,
                  "src": "374:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "374:11:1"
              }
            ],
            "name": "createCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "name": "card",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "341:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                    "typeString": "struct CryptoBeastsTypes.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 575,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 656,
                    "src": "341:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                      "typeString": "struct CryptoBeastsTypes.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "340:18:1"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:1"
            },
            "scope": 618,
            "src": "321:156:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "526:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "cards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "543:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
                        "typeString": "struct CryptoBeastsTypes.Card storage ref[] storage ref"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "543:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 600,
                  "id": 603,
                  "nodeType": "Return",
                  "src": "536:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cardCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:2:1"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "520:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "519:6:1"
            },
            "scope": 618,
            "src": "483:79:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "626:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "cards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "643:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
                        "typeString": "struct CryptoBeastsTypes.Card storage ref[] storage ref"
                      }
                    },
                    "id": 614,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 613,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "649:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "643:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage",
                      "typeString": "struct CryptoBeastsTypes.Card storage ref"
                    }
                  },
                  "functionReturnParameters": 611,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "636:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "585:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:12:1"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "613:11:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                    "typeString": "struct CryptoBeastsTypes.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 609,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 656,
                    "src": "613:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                      "typeString": "struct CryptoBeastsTypes.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:13:1"
            },
            "scope": 618,
            "src": "568:94:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 619,
        "src": "199:465:1"
      }
    ],
    "src": "0:665:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/Cards.sol",
    "exportedSymbols": {
      "Cards": [
        618
      ]
    },
    "id": 619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 557,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 558,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 559,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 1313,
        "src": "59:79:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nicholasaddison/Documents/workspaces/scratch/crypto-beasts/contracts/CryptoBeastsTypes.sol",
        "file": "./CryptoBeastsTypes.sol",
        "id": 561,
        "nodeType": "ImportDirective",
        "scope": 619,
        "sourceUnit": 658,
        "src": "139:58:1",
        "symbolAliases": [
          {
            "foreign": 560,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 562,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1312,
              "src": "217:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1312",
                "typeString": "contract Ownable"
              }
            },
            "id": 563,
            "nodeType": "InheritanceSpecifier",
            "src": "217:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 564,
              "name": "CryptoBeastsTypes",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 657,
              "src": "226:17:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CryptoBeastsTypes_$657",
                "typeString": "contract CryptoBeastsTypes"
              }
            },
            "id": 565,
            "nodeType": "InheritanceSpecifier",
            "src": "226:17:1"
          }
        ],
        "contractDependencies": [
          657,
          1312
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 618,
        "linearizedBaseContracts": [
          618,
          657,
          1312
        ],
        "name": "Cards",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 571,
            "name": "NewCard",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "indexed": false,
                  "name": "cardId",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "265:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 566,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "265:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 569,
                  "indexed": false,
                  "name": "card",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "278:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                    "typeString": "struct CryptoBeastsTypes.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 568,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 656,
                    "src": "278:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                      "typeString": "struct CryptoBeastsTypes.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:24:1"
            },
            "src": "251:38:1"
          },
          {
            "constant": false,
            "id": 574,
            "name": "cards",
            "nodeType": "VariableDeclaration",
            "scope": 618,
            "src": "295:19:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
              "typeString": "struct CryptoBeastsTypes.Card[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 572,
                "name": "Card",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 656,
                "src": "295:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                  "typeString": "struct CryptoBeastsTypes.Card"
                }
              },
              "id": 573,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "295:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage_ptr",
                "typeString": "struct CryptoBeastsTypes.Card[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "390:87:1",
              "statements": [
                {
                  "assignments": [
                    582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 582,
                      "name": "cardId",
                      "nodeType": "VariableDeclaration",
                      "scope": 595,
                      "src": "400:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 581,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "400:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 589,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 585,
                          "name": "card",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "425:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                            "typeString": "struct CryptoBeastsTypes.Card memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                            "typeString": "struct CryptoBeastsTypes.Card memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 583,
                          "name": "cards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 574,
                          "src": "414:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
                            "typeString": "struct CryptoBeastsTypes.Card storage ref[] storage ref"
                          }
                        },
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "414:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Card_$656_storage_$returns$_t_uint256_$",
                          "typeString": "function (struct CryptoBeastsTypes.Card storage ref) returns (uint256)"
                        }
                      },
                      "id": 586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "414:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "433:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "414:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "400:34:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 591,
                        "name": "cardId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "457:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 592,
                        "name": "card",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 576,
                        "src": "465:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                          "typeString": "struct CryptoBeastsTypes.Card memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                          "typeString": "struct CryptoBeastsTypes.Card memory"
                        }
                      ],
                      "id": 590,
                      "name": "NewCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 571,
                      "src": "449:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_Card_$656_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct CryptoBeastsTypes.Card memory)"
                      }
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "449:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 594,
                  "nodeType": "EmitStatement",
                  "src": "444:26:1"
                }
              ]
            },
            "documentation": null,
            "id": 596,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 579,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 578,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1246,
                  "src": "374:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "374:11:1"
              }
            ],
            "name": "createCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 576,
                  "name": "card",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "341:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                    "typeString": "struct CryptoBeastsTypes.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 575,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 656,
                    "src": "341:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                      "typeString": "struct CryptoBeastsTypes.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "340:18:1"
            },
            "returnParameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:1"
            },
            "scope": 618,
            "src": "321:156:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "526:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 601,
                      "name": "cards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "543:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
                        "typeString": "struct CryptoBeastsTypes.Card storage ref[] storage ref"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "543:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 600,
                  "id": 603,
                  "nodeType": "Return",
                  "src": "536:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cardCount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "501:2:1"
            },
            "returnParameters": {
              "id": 600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 599,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "520:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 598,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "519:6:1"
            },
            "scope": 618,
            "src": "483:79:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "626:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "cards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 574,
                      "src": "643:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Card_$656_storage_$dyn_storage",
                        "typeString": "struct CryptoBeastsTypes.Card storage ref[] storage ref"
                      }
                    },
                    "id": 614,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 613,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 607,
                      "src": "649:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "643:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage",
                      "typeString": "struct CryptoBeastsTypes.Card storage ref"
                    }
                  },
                  "functionReturnParameters": 611,
                  "id": 615,
                  "nodeType": "Return",
                  "src": "636:19:1"
                }
              ]
            },
            "documentation": null,
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 607,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "585:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "584:12:1"
            },
            "returnParameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 610,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "613:11:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Card_$656_memory_ptr",
                    "typeString": "struct CryptoBeastsTypes.Card"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 609,
                    "name": "Card",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 656,
                    "src": "613:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Card_$656_storage_ptr",
                      "typeString": "struct CryptoBeastsTypes.Card"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "612:13:1"
            },
            "scope": 618,
            "src": "568:94:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 619,
        "src": "199:465:1"
      }
    ],
    "src": "0:665:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "13654820909954": {
      "events": {
        "0xb1b17b23cffcf729d34b26aac4faa18940cec6ac11f34c678d0bfe232b00dc81": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "cardId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "components": [
                        {
                          "name": "health",
                          "type": "uint16"
                        },
                        {
                          "name": "defence",
                          "type": "uint16"
                        },
                        {
                          "name": "mana",
                          "type": "uint16"
                        },
                        {
                          "name": "attack",
                          "type": "uint16"
                        },
                        {
                          "name": "specialAttack",
                          "type": "uint16"
                        }
                      ],
                      "name": "opponent",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "health",
                          "type": "uint16"
                        },
                        {
                          "name": "defence",
                          "type": "uint16"
                        },
                        {
                          "name": "mana",
                          "type": "uint16"
                        },
                        {
                          "name": "attack",
                          "type": "uint16"
                        },
                        {
                          "name": "specialAttack",
                          "type": "uint16"
                        }
                      ],
                      "name": "player",
                      "type": "tuple"
                    },
                    {
                      "name": "manaCost",
                      "type": "uint16"
                    }
                  ],
                  "name": "ability",
                  "type": "tuple"
                },
                {
                  "name": "initHealth",
                  "type": "uint16"
                },
                {
                  "name": "initDefence",
                  "type": "uint16"
                },
                {
                  "name": "initMana",
                  "type": "uint16"
                },
                {
                  "name": "speed",
                  "type": "uint16"
                },
                {
                  "name": "attack",
                  "type": "uint16"
                },
                {
                  "name": "specialAttack",
                  "type": "uint16"
                }
              ],
              "indexed": false,
              "name": "card",
              "type": "tuple"
            }
          ],
          "name": "NewCard",
          "type": "event",
          "signature": "0xb1b17b23cffcf729d34b26aac4faa18940cec6ac11f34c678d0bfe232b00dc81"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x932A02c73Ac7e2ED844540A613CE3256b3c84492",
      "transactionHash": "0x1f0713d49c3b8e14002e4bc405b112984798343e4f384232e44986ba2e8aa7ca"
    },
    "9545242630824": {
      "events": {
        "0xb1b17b23cffcf729d34b26aac4faa18940cec6ac11f34c678d0bfe232b00dc81": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "cardId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "name": "name",
                  "type": "string"
                },
                {
                  "components": [
                    {
                      "name": "name",
                      "type": "string"
                    },
                    {
                      "components": [
                        {
                          "name": "health",
                          "type": "uint16"
                        },
                        {
                          "name": "defence",
                          "type": "uint16"
                        },
                        {
                          "name": "mana",
                          "type": "uint16"
                        },
                        {
                          "name": "attack",
                          "type": "uint16"
                        },
                        {
                          "name": "specialAttack",
                          "type": "uint16"
                        }
                      ],
                      "name": "opponent",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "name": "health",
                          "type": "uint16"
                        },
                        {
                          "name": "defence",
                          "type": "uint16"
                        },
                        {
                          "name": "mana",
                          "type": "uint16"
                        },
                        {
                          "name": "attack",
                          "type": "uint16"
                        },
                        {
                          "name": "specialAttack",
                          "type": "uint16"
                        }
                      ],
                      "name": "player",
                      "type": "tuple"
                    },
                    {
                      "name": "manaCost",
                      "type": "uint16"
                    }
                  ],
                  "name": "ability",
                  "type": "tuple"
                },
                {
                  "name": "initHealth",
                  "type": "uint16"
                },
                {
                  "name": "initDefence",
                  "type": "uint16"
                },
                {
                  "name": "initMana",
                  "type": "uint16"
                },
                {
                  "name": "speed",
                  "type": "uint16"
                },
                {
                  "name": "attack",
                  "type": "uint16"
                },
                {
                  "name": "specialAttack",
                  "type": "uint16"
                }
              ],
              "indexed": false,
              "name": "card",
              "type": "tuple"
            }
          ],
          "name": "NewCard",
          "type": "event",
          "signature": "0xb1b17b23cffcf729d34b26aac4faa18940cec6ac11f34c678d0bfe232b00dc81"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x2Fdc3b6FAC46d7D17BAC38910c4b24AAbd1258Ee",
      "transactionHash": "0xc0f967f6ccd8624d065d3412b78b7efd64f53593b053bfa3ada7798892ce4dc6"
    }
  },
  "schemaVersion": "3.0.6",
  "updatedAt": "2019-04-18T23:04:20.386Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}